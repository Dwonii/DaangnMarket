1. 라이브러리 다운로드 및 위치
   - http://www.servlets.com에서  cos.jar 다운로드
   - 위치는 톰캣의 라이브러리 폴더
   - 파일이 저장될 위치 생성

2. 업로드 폼
<form name="폼이름" action="서버에서 처리할 파일명" method="폼전송방식" enctype="multipart/form-data">

3. 업로드 처리
<%@page import="com.oreilly.servlet.multipart.DefaultFileRenamePolicy"%>
<%@page import="com.oreilly.servlet.MultipartRequest"%> 

4. 업로드 코드
<%
//파일이 저장될 서버의 경로. 되도록이면 getRealPath를 이용하자.
String savePath = request.getServletContext().getRealPath("/upload");

//파일 크기 15MB로 제한
int sizeLimit = 1024*1024*15;
                                                        
//↓ request 객체,               ↓ 저장될 서버 경로,       ↓ 파일 최대 크기,    ↓ 인코딩 방식,       ↓ 같은 이름의 파일명 방지 처리
//(HttpServletRequest request, String saveDirectory, int maxPostSize, String encoding, FileRenamePolicy policy)
//아래와 같이 MultipartRequest를 생성만 해주면 파일이 업로드 된다.(파일 자체의 업로드 완료)
MultipartRequest multi = new MultipartRequest(request, savePath, sizeLimit, "UTF-8", new DefaultFileRenamePolicy());

//파일명 확인
System.out.println("화면UI이름=" + multi.getOriginalFileName("bfile") );
System.out.println("폴더저장이름=" + multi.getFilesystemName("bfile")  );

//DB에 저장할 객체 생성
BoardVO vo = new BoardVO();
vo.setBtitle(multi.getParameter("btitle"));
vo.setBcontent(multi.getParameter("bcontent"));
vo.setBfile(화면UI파일명);
vo.setBsfile(폴더저장파일명);

//DB 연동 작업
%>